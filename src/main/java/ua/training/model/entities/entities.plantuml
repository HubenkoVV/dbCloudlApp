@startuml

title __ENTITIES's Class Diagram__\n

  package ua.training.model.entities {
    class Article {
        - id : int
        - name : String
        - text : String
        - idPeriodical : int
        - date : LocalDate
        + getId()
        + setId()
        + getName()
        + setName()
        + getText()
        + setText()
        + getIdPeriodical()
        ~ setIdPeriodical()
        + getDate()
        ~ setDate()
        + equals()
        + hashCode()
    }
  }
  

  package ua.training.model.entities {
    class ArticleBuilder {
        - id : int
        - name : String
        - text : String
        - idPeriodical : int
        - date : LocalDate
        + buildId()
        + buildName()
        + buildText()
        + buildIdPeriodical()
        + buildDate()
        + build()
    }
  }
  

  package ua.training.model.entities {
    class Payment {
        - id : int
        - price : int
        - idUser : int
        - periodicals : List<Periodical>
        + getId()
        + setId()
        + getPrice()
        # setPrice()
        + getIdUser()
        # setIdUser()
        + getPeriodicals()
        + setPeriodicals()
        + equals()
        + hashCode()
    }
  }
  

  package ua.training.model.entities {
    class PaymentBuilder {
        - id : int
        - price : int
        - idUser : int
        - periodicals : List<Periodical>
        + buildId()
        + buildPrice()
        + buildIdUser()
        + buildPeriodicals()
        + build()
        + buildLazy()
    }
  }
  

  package ua.training.model.entities {
    class Periodical {
        - id : int
        - name : String
        - shortDescription : String
        - price : int
        - users : List<User>
        - payments : List<Payment>
        - articles : List<Article>
        + getId()
        + setId()
        + getName()
        + setName()
        + getShortDescription()
        + setShortDescription()
        + getPrice()
        + setPrice()
        + getUsers()
        + getPayments()
        + getArticles()
        + equals()
        + hashCode()
    }
  }
  

  package ua.training.model.entities {
    class PeriodicalBuilder {
        - id : int
        - name : String
        - shortDescription : String
        - price : int
        + buildId()
        + buildName()
        + buildShortDescription()
        + buildPrice()
        + build()
        + buildLazy()
    }
  }
  

  package ua.training.model.entities {
    class User {
        - id : int
        - name : String
        - surname : String
        - login : String
        - password : String
        - phone : String
        - money : int
        - payments : List<Payment>
        - periodicals : List<Periodical>
        + getId()
        + setId()
        + getName()
        # setName()
        + getSurname()
        # setSurname()
        + getLogin()
        # setLogin()
        + getPassword()
        + setPassword()
        + getPhone()
        # setPhone()
        + getRole()
        # setRole()
        + getMoney()
        + setMoney()
        + getPayments()
        + getPeriodicals()
        ~ setPeriodicals()
        + equals()
        + hashCode()
    }
  }
  

  package ua.training.model.entities {
    class UserBuilder {
        - id : int
        - name : String
        - surname : String
        - login : String
        - password : String
        - phone : String
        - money : int
        + buildId()
        + buildName()
        + buildSurname()
        + buildLogin()
        + buildPassword()
        + buildPhone()
        + buildRole()
        + buildMoney()
        + build()
        + buildLazy()
    }
  }
  

  package ua.training.model.entities {
    enum UserRole {
      ADMIN
      USER
      GUEST
      name
    }
  }
  

  Article +-down- ArticleBuilder
  Payment +-down- PaymentBuilder
  Periodical +-down- PeriodicalBuilder
  User o-- UserRole : role
  User +-down- UserBuilder
  UserBuilder o-- UserRole : role


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
